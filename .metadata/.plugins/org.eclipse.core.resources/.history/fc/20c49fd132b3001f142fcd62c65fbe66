<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Nearby Hospitals</title>
    

    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <style>
        @font-face {
            font-family: 'Nobility';
            src: url('../fonts/NobilityCasual-pZdR.ttf') format('truetype');
        }
        @font-face {
            font-family: 'sp';
            src: url('../fonts/SpButchLiteBold-8O88B.otf') format('truetype');
        }
        :root {
            --primary-color: #3498db;
            --secondary-color: #2ecc71;
            --text-color: #333;
            --background-color: #f4f7f9;
            --content-background: rgba(255, 255, 255, 0.8);
            --blur-effect: blur(10px);
            --card-gradient: linear-gradient(135deg, #e0f7fa, #f1f8e9);
            --navbar-gradient: linear-gradient(90deg, #3498db, #2ecc71);
            --button-gradient: linear-gradient(135deg, #6dd5ed, #2193b0);
        }
        .dark-mode {
            --primary-color: #2980b9;
            --secondary-color: #27ae60;
            --text-color: #e0e0e0;
            --background-color: #1a1a1a;
            --content-background: rgba(44, 44, 44, 0.8);
            --blur-effect: blur(15px);
            --card-gradient: linear-gradient(135deg, #263238, #37474f);
            --navbar-gradient: linear-gradient(90deg, #2980b9, #27ae60);
            --button-gradient: linear-gradient(135deg, #3a6186, #89253e);
        }
        body {
            font-family: 'Comfortaa', 'Nanum Gothic', cursive, sans-serif;
            background-color: var(--background-color);
            color: var(--text-color);
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            transition: background-color 0.3s, color 0.3s;
        }
        h1 {
            font-family: 'sp', sans-serif;
            color: var(--primary-color);
            font-size: 3rem;
            margin-bottom: 1rem;
            text-align: center;
            background: linear-gradient(90deg, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        #map {
            height: 80vh;
            width: 100%;
            margin-top: 20px;
        }
        button {
            background: var(--button-gradient);
            color: white;
            border: none;
            padding: 15px 25px;
            border-radius: 10px;
            font-size: 1.1rem;
            cursor: pointer;
            transition: all 0.3s ease-in-out;
        }
        button:hover {
            transform: scale(1.05);
        }
        .filters {
            margin-bottom: 20px;
            background: var(--content-background);
            backdrop-filter: var(--blur-effect);
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            padding: 20px;
            transition: all 0.3s ease-in-out;
        }
        .filters:hover {
            transform: scale(1.02);
            box-shadow: 0 6px 25px rgba(0, 0, 0, 0.2);
        }
        label {
            display: block;
            margin-bottom: 10px;
            font-size: 1.1em;
            color: var(--text-color);
        }
        @media (max-width: 768px) {
            h1 {
                font-size: 2rem;
            }
            .filters {
                padding: 15px;
            }
        }
         header {
            background: var(--navbar-gradient);
            color: white;
            padding: 1rem;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            border-bottom: 2px solid var(--secondary-color);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .logo {
            font-family: 'Cinzel', serif;
            font-size: 2.5rem;
            font-weight: bold;
        }

        #darkModeToggle {
            background: var(--button-gradient);
            border: none;
            color: white;
            padding: 0.5rem 1.5rem;
            border-radius: 25px;
            cursor: pointer;
            position: absolute;
            right: 20px;
            transition: background 0.3s, transform 0.2s;
        }

        #darkModeToggle:hover {
            transform: scale(1.1);
            background: linear-gradient(135deg, #4caf50, #2c3e50);
        }

        nav {
            background: var(--navbar-gradient);
            padding: 0.7rem;
            border-radius: 10px;
            margin: 0.5rem auto;
            max-width: 90%;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
        }

        nav ul {
            list-style: none;
            padding: 0;
            margin: 0;
            display: flex;
            justify-content: center;
            gap: 1rem;
        }

        nav ul li {
            margin: 0;
        }

        nav ul li a {
            color: white;
            text-decoration: none;
            font-weight: bold;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            transition: background-color 0.3s ease, transform 0.3s;
        }

        nav ul li a:hover {
            background-color: rgba(255, 255, 255, 0.2);
            transform: translateY(-3px);
        }
    </style>
</head>
<body>
    <header>
        <div class="logo">HealthMate</div>
        <button id="darkModeToggle">Toggle Dark Mode</button>
    </header>
    <nav>
        <ul>
            <li><a href="symptomChecker">Symptom Checker</a></li>
            <li><a href="nearbyFacilities">Nearby Healthcare Facilities</a></li>
            <li><a href="medicationPrices">Medication Price Comparison</a></li>
            <li><a href="hospitalInsights">Hospital Insights</a></li>
            <li><button id="connectWalletBtn">Connect Wallet</button></li>
        </ul>
        <div id="walletAddress"></div>
    </nav>

    <!-- Keep existing content -->

    <script>
        // Add this to your existing scripts
        document.addEventListener('DOMContentLoaded', function() {
            const connectWalletBtn = document.getElementById('connectWalletBtn');
            const walletAddressDiv = document.getElementById('walletAddress');

            connectWalletBtn.addEventListener('click', async () => {
                if (typeof window.ethereum !== 'undefined') {
                    try {
                        await window.ethereum.request({ method: 'eth_requestAccounts' });
                        const accounts = await window.ethereum.request({ method: 'eth_accounts' });
                        const address = accounts[0];

                        const response = await fetch('/connect-wallet', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded',
                            },
                            body: `providerUrl=${window.ethereum.networkVersion}`
                        });

                        if (response.ok) {
                            walletAddressDiv.innerHTML = `Connected: <span style="word-break: break-all;">${address}</span>`;
                            connectWalletBtn.textContent = 'Wallet Connected';
                            connectWalletBtn.disabled = true;
                        } else {
                            walletAddressDiv.textContent = 'Failed to connect wallet on server';
                        }
                    } catch (error) {
                        console.error('Failed to connect wallet', error);
                        walletAddressDiv.textContent = 'Failed to connect wallet';
                    }
                } else {
                    walletAddressDiv.textContent = 'MetaMask not detected';
                }
            });

            const darkModeToggle = document.getElementById('darkModeToggle');
            const body = document.body;

            darkModeToggle.addEventListener('click', () => {
                body.classList.toggle('dark-mode');
                localStorage.setItem('darkMode', body.classList.contains('dark-mode'));
            });

            if (localStorage.getItem('darkMode') === 'true') {
                body.classList.add('dark-mode');
            }
        });
    </script>
</body>
</html>