<%@ page import="com.manas.service.WalletService" %>
<%@ page import="org.springframework.context.ApplicationContext" %>
<%@ page import="org.springframework.web.context.support.WebApplicationContextUtils" %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile</title>
    <style>
        @font-face {
            font-family: 'Nobility';
            src: url('../fonts/NobilityCasual-pZdR.ttf') format('truetype');
        }
        @font-face {
            font-family: 'sp';
            src: url('../fonts/SpButchLiteBold-8O88B.otf') format('truetype');
        }
        :root {
            --primary-color: #3498db;
            --secondary-color: #2ecc71;
            --text-color: #333;
            --background-color: #f4f7f9;
            --content-background: rgba(255, 255, 255, 0.8);
            --blur-effect: blur(10px);
            --card-gradient: linear-gradient(135deg, #e0f7fa, #f1f8e9);
            --navbar-gradient: linear-gradient(90deg, #3498db, #2ecc71);
            --button-gradient: linear-gradient(135deg, #6dd5ed, #2193b0);
        }
        .dark-mode {
            --primary-color: #2980b9;
            --secondary-color: #27ae60;
            --text-color: #e0e0e0;
            --background-color: #1a1a1a;
            --content-background: rgba(44, 44, 44, 0.8);
            --blur-effect: blur(15px);
            --card-gradient: linear-gradient(135deg, #263238, #37474f);
            --navbar-gradient: linear-gradient(90deg, #2980b9, #27ae60);
            --button-gradient: linear-gradient(135deg, #3a6186, #89253e);
        }
        body {
            font-family: 'Comfortaa', 'Nanum Gothic', cursive, sans-serif;
            background-color: var(--background-color);
            color: var(--text-color);
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            transition: background-color 0.3s, color 0.3s;
        }
        h1 {
            font-family: 'sp', sans-serif;
            color: var(--primary-color);
            font-size: 3rem;
            margin-top: 50px;
            margin-bottom: 1rem;
            text-align: center;
            background: linear-gradient(90deg, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        ul {
            list-style-type: none;
            padding: 0;
            width: 80%;
            max-width: 800px;
            margin: 30px auto;
        }
        li {
            background: var(--content-background);
            backdrop-filter: var(--blur-effect);
            margin: 10px 0;
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            font-size: 1.1em;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            transition: all 0.3s ease-in-out;
        }
        li:hover {
            transform: scale(1.02);
            box-shadow: 0 6px 25px rgba(0, 0, 0, 0.2);
        }
        li span.profile-name {
            font-weight: bold;
            font-size: 1.4em;
            color: var(--primary-color);
            margin-bottom: 8px;
        }
        li .stats {
            color: var(--text-color);
            line-height: 1.6;
        }
        @media (max-width: 768px) {
            h1 {
                font-size: 2rem;
            }
            ul {
                width: 90%;
            }
            li {
                font-size: 1em;
            }
        }
    </style>
</head>
<body>
    <h1>Profile</h1>
    <ul>
        <%
            ApplicationContext context = WebApplicationContextUtils.getWebApplicationContext(application);
            WalletService walletService = context.getBean(WalletService.class);
            String walletAddress = walletService.getWalletAddress();

            if (walletAddress != null && !walletAddress.isEmpty()) {
                // Here you would call a method to retrieve user data from the blockchain
                // For demonstration, we'll use placeholder data
                String name = "John Doe";
                String email = "john.doe@example.com";
                String phone = "123-456-7890";
        %>
                <li>
                    <span class="profile-name"><%= name %></span>
                    <div class="stats">
                        Email: <%= email %><br/>
                        Phone: <%= phone %><br/>
                        Wallet Address: <%= walletAddress %>
                    </div>
                </li>
        <%
            } else {
        %>
                <li>
                    <span class="profile-name">No wallet connected</span>
                    <div class="stats">
                        Please connect your wallet to view your profile.
                    </div>
                </li>
        <%
            }
        %>
    </ul>
    <script>
        const body = document.body;
        if (localStorage.getItem('darkMode') === 'true') {
            body.classList.add('dark-mode');
        }

        // Add wallet connection functionality
        document.addEventListener('DOMContentLoaded', function() {
            const connectWalletBtn = document.createElement('button');
            connectWalletBtn.textContent = 'Connect Wallet';
            connectWalletBtn.style.marginTop = '20px';
            document.body.appendChild(connectWalletBtn);

            connectWalletBtn.addEventListener('click', async () => {
                if (typeof window.ethereum !== 'undefined') {
                    try {
                        await window.ethereum.request({ method: 'eth_requestAccounts' });
                        const accounts = await window.ethereum.request({ method: 'eth_accounts' });
                        const address = accounts[0];

                        const response = await fetch('/connect-wallet', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded',
                            },
                            body: `providerUrl=${window.ethereum.networkVersion}`
                        });

                        if (response.ok) {
                            alert('Wallet connected successfully. Please refresh the page to view your profile.');
                        } else {
                            alert('Failed to connect wallet on server');
                        }
                    } catch (error) {
                        console.error('Failed to connect wallet', error);
                        alert('Failed to connect wallet');
                    }
                } else {
                    alert('MetaMask not detected');
                }
            });
        });
    </script>
</body>
</html>